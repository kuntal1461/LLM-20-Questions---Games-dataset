{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":61247,"databundleVersionId":8550470,"sourceType":"competition"}],"dockerImageVersionId":30715,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-31T18:30:27.716280Z","iopub.execute_input":"2024-05-31T18:30:27.717141Z","iopub.status.idle":"2024-05-31T18:30:29.233232Z","shell.execute_reply.started":"2024-05-31T18:30:27.717101Z","shell.execute_reply":"2024-05-31T18:30:29.231979Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.json\n/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.py\n/kaggle/input/llm-20-questions/llm_20_questions/keywords.py\n/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.js\n","output_type":"stream"}]},{"cell_type":"code","source":"import os\nimport pandas as pd\nimport json\n\n# List all files in the input directory\ninput_dir = '/kaggle/input/llm-20-questions'\nfor dirname, _, filenames in os.walk(input_dir):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Adjusted file paths based on the listing\njson_file_path = '/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.json'\npython_file_1_path = '/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.py'\npython_file_2_path = '/kaggle/input/llm-20-questions/llm_20_questions/keywords.py'\njs_file_path = '/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.js'\n\n# Inspect the JSON file content\ntry:\n    with open(json_file_path) as f:\n        json_content = json.load(f)\n    print(\"JSON file content:\")\n    print(json.dumps(json_content, indent=2))\nexcept FileNotFoundError as e:\n    print(e)\n\n# Adjust the code to read the JSON data based on its structure\ntry:\n    if isinstance(json_content, list):\n        df_json = pd.json_normalize(json_content)\n    elif isinstance(json_content, dict):\n        df_json = pd.json_normalize(json_content, sep='_')\n    else:\n        raise ValueError(\"Unsupported JSON structure\")\n    print(\"JSON DataFrame:\")\n    print(df_json.head())\nexcept Exception as e:\n    print(e)\n\n# Read and print the first Python file content\ntry:\n    with open(python_file_1_path) as f:\n        code1 = f.read()\n    print(\"First Python script content:\")\n    print(code1)\nexcept FileNotFoundError as e:\n    print(e)\n\n# Read and print the second Python file content\ntry:\n    with open(python_file_2_path) as f:\n        code2 = f.read()\n    print(\"Second Python script content:\")\n    print(code2)\nexcept FileNotFoundError as e:\n    print(e)\n\n# Read and print the JavaScript file content\ntry:\n    with open(js_file_path) as f:\n        js_content = f.read()\n    print(\"JavaScript file content:\")\n    print(js_content)\nexcept FileNotFoundError as e:\n    print(e)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-31T18:42:49.825110Z","iopub.execute_input":"2024-05-31T18:42:49.825629Z","iopub.status.idle":"2024-05-31T18:42:49.875618Z","shell.execute_reply.started":"2024-05-31T18:42:49.825592Z","shell.execute_reply":"2024-05-31T18:42:49.874628Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.json\n/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.py\n/kaggle/input/llm-20-questions/llm_20_questions/keywords.py\n/kaggle/input/llm-20-questions/llm_20_questions/llm_20_questions.js\nJSON file content:\n{\n  \"name\": \"llm_20_questions\",\n  \"title\": \"20 Questions\",\n  \"description\": \"20 Questions played between two LLM agents\",\n  \"version\": \"1.0.0\",\n  \"agents\": [\n    4\n  ],\n  \"configuration\": {\n    \"episodeSteps\": 61,\n    \"actTimeout\": 60,\n    \"runTimeout\": 9600,\n    \"agentTimeout\": {\n      \"description\": \"Obsolete field kept for backwards compatibility, please use observation.remainingOverageTime.\",\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"default\": 3600\n    }\n  },\n  \"reward\": {\n    \"description\": \"1-20 = Won, -1 = Lost\",\n    \"enum\": [\n      -1,\n      0,\n      1,\n      2,\n      3,\n      4,\n      5,\n      6,\n      7,\n      8,\n      9,\n      10,\n      11,\n      12,\n      13,\n      14,\n      15,\n      16,\n      17,\n      18,\n      19,\n      20\n    ],\n    \"defaults\": [\n      0,\n      0,\n      0,\n      0\n    ]\n  },\n  \"observation\": {\n    \"questions\": {\n      \"description\": \"Questions the guessing agent has asked.\",\n      \"type\": \"array\",\n      \"default\": []\n    },\n    \"guesses\": {\n      \"description\": \"Guesses the guessing agent has made.\",\n      \"type\": \"array\",\n      \"default\": []\n    },\n    \"answers\": {\n      \"description\": \"Answers the answering agent has given.\",\n      \"type\": \"array\",\n      \"default\": []\n    },\n    \"role\": {\n      \"description\": \"The role of the agent for this episode.\",\n      \"enum\": [\n        \"guesser\",\n        \"answerer\"\n      ],\n      \"defaults\": [\n        \"guesser\",\n        \"answerer\",\n        \"guesser\",\n        \"answerer\"\n      ]\n    },\n    \"turnType\": {\n      \"description\": \"The type of action that should be taken this turn.\",\n      \"enum\": [\n        \"ask\",\n        \"guess\",\n        \"answer\"\n      ],\n      \"defaults\": [\n        \"ask\",\n        \"answer\",\n        \"ask\",\n        \"answer\"\n      ]\n    },\n    \"keyword\": {\n      \"description\": \"The keyword to win the game\",\n      \"type\": \"string\",\n      \"shared\": \"false\",\n      \"default\": \"\"\n    },\n    \"category\": {\n      \"description\": \"The catagory of the keyword.\",\n      \"type\": \"string\",\n      \"shared\": \"false\",\n      \"default\": \"\"\n    },\n    \"remainingOverageTime\": 300\n  },\n  \"action\": {\n    \"description\": \"LLM agent response.\",\n    \"type\": \"string\",\n    \"default\": \"\"\n  },\n  \"status\": {\n    \"defaults\": [\n      \"ACTIVE\",\n      \"INACTIVE\",\n      \"ACTIVE\",\n      \"INACTIVE\"\n    ]\n  }\n}\nJSON DataFrame:\n               name         title                                 description  \\\n0  llm_20_questions  20 Questions  20 Questions played between two LLM agents   \n\n  version agents  configuration_episodeSteps  configuration_actTimeout  \\\n0   1.0.0    [4]                          61                        60   \n\n   configuration_runTimeout  \\\n0                      9600   \n\n              configuration_agentTimeout_description  \\\n0  Obsolete field kept for backwards compatibilit...   \n\n  configuration_agentTimeout_type  ...  observation_keyword_default  \\\n0                          number  ...                                \n\n   observation_category_description observation_category_type  \\\n0      The catagory of the keyword.                    string   \n\n  observation_category_shared observation_category_default  \\\n0                       false                                \n\n  observation_remainingOverageTime   action_description action_type  \\\n0                              300  LLM agent response.      string   \n\n  action_default                       status_defaults  \n0                 [ACTIVE, INACTIVE, ACTIVE, INACTIVE]  \n\n[1 rows x 43 columns]\nFirst Python script content:\nimport json\nimport os\nimport pandas as pd\nimport random\nimport string\nimport torch\n\nfrom .keywords import KEYWORDS_JSON\nfrom os import path\nfrom pathlib import Path\nfrom random import choice\nfrom string import Template\nfrom transformers import T5Tokenizer, T5ForConditionalGeneration\n\n\nllm_parent_dir = \"/kaggle/input/flan-t5/pytorch/large\"\n\ndevice = None\nmodel = None\ntokenizer = None\nmodel_initialized = False\n\nERROR = \"ERROR\"\nDONE = \"DONE\"\nINACTIVE = \"INACTIVE\"\nACTIVE = \"ACTIVE\"\nTIMEOUT = \"TIMEOUT\"\n\nGUESS = \"guess\"\nASK = \"ask\"\nGUESSER = \"guesser\"\nANSWERER = \"guesser\"\n\nkeywords_list = json.loads(KEYWORDS_JSON)\nkeyword_cat = random.choice(keywords_list)\ncategory = keyword_cat[\"category\"]\nkeyword_obj = random.choice(keyword_cat[\"words\"])\nkeyword = keyword_obj[\"keyword\"]\nalts = keyword_obj[\"alts\"]\n\n\ndef guesser_agent(obs):\n    info_prompt = \"\"\"You are playing a game of 20 questions where you ask the questions and try to figure out the keyword, which will be a real or fictional person, place, or thing. \\nHere is what you know so far:\\n{q_a_thread}\"\"\"\n    questions_prompt = \"\"\"Ask one yes or no question.\"\"\"\n    guess_prompt = \"\"\"Guess the keyword. Only respond with the exact word/phrase. For example, if you think the keyword is [paris], don't respond with [I think the keyword is paris] or [Is the kewyord Paris?]. Respond only with the word [paris].\"\"\"\n\n    q_a_thread = \"\"\n    for i in range(0, len(obs.answers)):\n        q_a_thread = \"{}Q: {} A: {}\\n\".format(\n            q_a_thread,\n            obs.questions[i],\n            obs.answers[i]\n        )\n\n    prompt = \"\"\n    if obs.turnType == ASK:\n        prompt = \"{}{}\".format(\n            info_prompt.format(q_a_thread=q_a_thread),\n            questions_prompt\n        )\n    elif obs.turnType == GUESS:\n        prompt = \"{}{}\".format(\n            info_prompt.format(q_a_thread=q_a_thread),\n            guess_prompt\n        )\n    else:\n        return \"\"\n    \n    return call_llm(prompt)\n\n    \n\ndef answerer_agent(obs):\n    info_prompt = \"\"\"You are a very precise answerer in a game of 20 questions. The keyword that the questioner is trying to guess is [the {category} {keyword}]. \"\"\"\n    answer_question_prompt = \"\"\"Answer the following question with only yes, no, or if unsure maybe: {question}\"\"\"\n\n    if obs.turnType == \"answer\":\n        prompt = \"{}{}\".format(\n            info_prompt.format(category=category,keyword=keyword),\n            answer_question_prompt.format(question=obs.questions[-1])\n        )\n        return call_llm(prompt)\n    else: \n        return \"\"\n\n\nagents = {GUESSER: guesser_agent, ANSWERER: answerer_agent}\n\ndef guesser_action(active, inactive, step):\n    guessed = False\n    if not active.action:\n        active.status = ERROR\n    elif active.observation.turnType == ASK:\n        question = active.action[:2000]\n        active.observation.questions.append(question)\n        inactive.observation.questions.append(question)\n    elif active.observation.turnType == GUESS:\n        guess = active.action[:100]\n        active.observation.guesses.append(guess)\n        inactive.observation.guesses.append(guess)\n    if active.action and keyword_guessed(active.action):\n        guessed = True\n        score = 20 - int(step / 3)\n        end_game(active, inactive, score, DONE, DONE)\n    return guessed\n\ndef end_game(active, inactive, reward, status, inactive_status):\n    active.observation.keyword = keyword\n    active.observation.category = category\n    inactive.observation.keyword = keyword\n    inactive.observation.category = category\n    active.reward = reward\n    inactive.reward = reward\n    active.status = status\n    inactive.status = inactive_status\n\n\ndef answerer_action(active, inactive):\n    active.observation.keyword = keyword\n    active.observation.category = category\n    response = active.action\n    if not response:\n        response = \"none\"\n        end_game(active, inactive, -1, ERROR, DONE)\n    elif \"yes\" in response.lower():\n        response = \"yes\"\n    elif \"no\" in response.lower():\n        response = \"no\"\n    else:\n        response = \"maybe\"\n        end_game(active, inactive, -1, ERROR, DONE)\n    active.observation.answers.append(response)\n    inactive.observation.answers.append(response)\n\ndef increment_turn(active, inactive, step, guessed):\n    if step == 59 and not guessed:\n        end_game(active, inactive, -1, DONE, DONE)\n    elif active.observation.turnType == \"guess\":\n        active.observation.turnType = \"ask\"\n    elif active.observation.turnType == \"ask\":\n        active.observation.turnType = \"guess\"\n        active.status = INACTIVE\n        inactive.status = ACTIVE\n    else:\n        active.status = INACTIVE\n        inactive.status = ACTIVE\n\n\ndef interpreter(state, env):\n    if env.done:\n        return state\n\n    # Isolate the active and inactive agents.\n    active1 = state[0] if state[0].status == ACTIVE else state[1]\n    inactive1 = state[0] if state[0].status == INACTIVE else state[1]\n    active2 = state[2] if state[2].status == ACTIVE else state[3]\n    inactive2 = state[2] if state[2].status == INACTIVE else state[3]\n    if active1.status == DONE and inactive1.status == DONE:\n        active1 = None\n        inactive1 = None\n    if active2.status == DONE or inactive2.status == DONE:\n        active2 = None\n        inactive2 = None\n    if active1 is None and inactive1 is None and active2 is None and inactive2 is None:\n        return state\n\n    step = state[0].observation.step\n\n    end_early = (active1 and active1.status) in (TIMEOUT, ERROR) or (active2 and active2.status in (TIMEOUT, ERROR))\n    either_guessed = False\n\n    if active1 is not None:\n        guessed = False\n        if active1.observation.role == GUESSER:\n            guessed = guesser_action(active1, inactive1, step)\n            either_guessed = guessed\n        else:\n            answerer_action(active1, inactive1)\n        if active1.status in (TIMEOUT, ERROR):\n            end_game(active1, inactive1, 0, active1.status, DONE)\n        elif end_early:\n            end_game(active1, inactive1, 0, DONE, DONE)\n        else:\n            increment_turn(active1, inactive1, step, guessed)\n    \n    if active2 is not None:\n        guessed = False\n        if active2.observation.role == GUESSER:\n            guessed = guesser_action(active2, inactive2, step)\n            either_guessed = either_guessed or guessed\n        else:\n            answerer_action(active2, inactive2)\n        if active2.status in (TIMEOUT, ERROR):\n            end_game(active2, inactive2, 0, active2.status, DONE)\n        elif end_early:\n            end_game(active2, inactive2, 0, DONE, DONE)\n        else:\n            increment_turn(active2, inactive2, step, guessed)\n    \n    return state\n\n\ndef renderer(state, env):\n\n    for s in state:\n        print(\"role: \", s.observation.role)\n        if s.observation.role == GUESSER:\n            transcript = \"\"\n            for i in range(0, len(s.observation.guesses)):\n                transcript = \"{}Q: {} A: {}\\nG: {}\\n\".format(\n                    transcript, s.observation.questions[i],\n                    s.observation.answers[i],\n                    s.observation.guesses[i]\n                )\n            print(transcript)\n\n        print(\"keyword: \", s.observation.keyword)\n        print(\"score: \", s.reward)\n        print(\"\")\n        print(\"\")\n        print(\"\")\n\n    return \"\"\n\n\njsonpath = path.abspath(path.join(path.dirname(__file__), \"llm_20_questions.json\"))\nwith open(jsonpath) as f:\n    specification = json.load(f)\n\ndef html_renderer():\n    jspath = path.abspath(path.join(path.dirname(__file__), \"llm_20_questions.js\"))\n    with open(jspath) as f:\n        return f.read()\n\n\ndef keyword_guessed(guess: str) -> bool:\n    def normalize(s: str) -> str:\n      t = str.maketrans(\"\", \"\", string.punctuation)\n      return s.lower().replace(\"the\", \"\").replace(\" \", \"\").translate(t)\n\n    if normalize(guess) == normalize(keyword):\n      return True\n    for s in alts:\n      if normalize(s) == normalize(guess):\n        return True\n\n    return False\n\n\ndef call_llm(prompt: str) -> str:\n    global model_initialized\n    global device\n    global model\n    global tokenizer\n\n    if not model_initialized:\n        if os.path.exists(llm_parent_dir) and len(os.listdir(llm_parent_dir)) > 0:\n            dirs = os.listdir(llm_parent_dir)\n            llm_dir = \"{}/{}\".format(llm_parent_dir, dirs[0])\n            device = \"cuda:0\" if torch.cuda.is_available() else \"cpu\"\n            model = T5ForConditionalGeneration.from_pretrained(llm_dir).to(device)\n            tokenizer = T5Tokenizer.from_pretrained(llm_dir)\n            model_initialized = True\n        else:\n            print(\"t5-flan model required to use default agents. Add any version of the large model.\")\n            print(\"https://www.kaggle.com/models/google/flan-t5/frameworks/pyTorch/variations/large.\")\n            raise Exception(\"t5-flan model required to use default agents.\")\n\n    inputs = tokenizer(prompt, return_tensors=\"pt\").to(device)\n    outputs = model.generate(**inputs)\n    answer = tokenizer.batch_decode(outputs, skip_special_tokens=True)\n    return answer[0]\n\nSecond Python script content:\n\"\"\"List of keywords for 20 Questions.\"\"\"\n\nKEYWORDS_JSON = \"\"\"\n[\n  {\n    \"category\": \"country\",\n    \"words\": [\n      {\n        \"keyword\": \"afghanistan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"albania\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"algeria\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"andorra\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"angola\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"antigua and barbuda\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"argentina\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"armenia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"australia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"austria\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"azerbaijan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bahrain\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bangladesh\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"barbados\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"belarus\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"belgium\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"belize\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"benin\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bhutan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bolivia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bosnia and herzegovina\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"botswana\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"brazil\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"brunei\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"bulgaria\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"burkina faso\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"burundi\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cambodia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cameroon\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"canada\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cape verde\",\n        \"alts\": [\"cabo verde\"]\n      },\n      {\n        \"keyword\": \"central african republic\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"chad\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"chile\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"china\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"colombia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"comoros\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"congo\",\n        \"alts\": [\"republic of the congo\", \"congo brazzaville\", \"congo republic\"]\n      },\n      {\n        \"keyword\": \"costa rica\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"croatia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cuba\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cyprus\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"czech republic\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"democratic republic of the congo\",\n        \"alts\": [\"drc\", \"congo kinshasa\"]\n      },\n      {\n        \"keyword\": \"denmark\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"djibouti\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"dominica\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"dominican republic\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ecuador\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"egypt\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"el salvador\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"england\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"equatorial guinea\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"eritrea\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"estonia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ethiopia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"federated states of micronesia\",\n        \"alts\": [\"micronesia\"]\n      },\n      {\n        \"keyword\": \"finland\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"france\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"gabon\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"gambia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"georgia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"germany\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ghana\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"greece\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"grenada\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"guatemala\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"guinea\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"guinea bissau\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"guyana\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"haiti\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"honduras\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"hungary\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"iceland\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"india\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"indonesia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"iran\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"iraq\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ireland\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"israel\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"italy\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"jamaica\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"japan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"jordan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kazakhstan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kenya\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kiribati\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kosovo\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kuwait\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kyrgyzstan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"laos\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"latvia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"lebanon\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"lesotho\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"liberia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"libya\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"liechtenstein\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"lithuania\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"luxembourg\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"madagascar\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"malawi\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"malaysia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"maldives\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mali\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"malta\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"marshall islands\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mauritania\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mauritius\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mexico\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"moldova\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"monaco\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mongolia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"montenegro\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"morocco\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mozambique\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"myanmar\",\n        \"alts\": [\"burma\"]\n      },\n      {\n        \"keyword\": \"namibia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nauru\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nepal\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"netherlands\",\n        \"alts\": [\"holland\"]\n      },\n      {\n        \"keyword\": \"new zealand\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nicaragua\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"niger\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nigeria\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"north korea\",\n        \"alts\": [\"dprk\", \"democratic peoples republic of korea\"]\n      },\n      {\n        \"keyword\": \"norway\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"oman\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"pakistan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"palau\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"palestine\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"panama\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"papua new guinea\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"paraguay\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"peru\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"philippines\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"poland\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"portugal\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"qatar\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"romania\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"russia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"rwanda\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"saint kitts and nevis\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"saint lucia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"saint vincent and the grenadines\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"samoa\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"san marino\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"sao tome and principe\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"saudi arabia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"senegal\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"serbia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"seychelles\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"sierra leone\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"singapore\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"slovakia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"slovenia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"solomon islands\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"somalia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"south africa\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"south korea\",\n        \"alts\": [\"republic of korea\"]\n      },\n      {\n        \"keyword\": \"spain\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"sudan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"suriname\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"swaziland\",\n        \"alts\": [\"eswatini\"]\n      },\n      {\n        \"keyword\": \"sweden\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"switzerland\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"syria\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"taiwan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"tajikistan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"tanzania\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"thailand\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"togo\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"tonga\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"trinidad and tobago\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"tunisia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"turkey\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"turkmenistan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"tuvalu\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"uganda\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ukraine\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"united arab emirates\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"united kingdom\",\n        \"alts\": [\"uk\", \"great britain\"]\n      },\n      {\n        \"keyword\": \"united states of america\",\n        \"alts\": [\"usa\", \"united states\", \"us\"]\n      },\n      {\n        \"keyword\": \"uruguay\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"uzbekistan\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"vanuatu\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"venezuela\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"vietnam\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"yemen\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"zambia\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"zimbabwe\",\n        \"alts\": []\n      }\n    ]\n  },\n  {\n    \"category\": \"city\",\n    \"words\": [\n      {\n        \"keyword\": \"amsterdam netherlands\",\n        \"alts\": [\"amsterdam\", \"amsterdam holland\"]\n      },\n      {\n        \"keyword\": \"anaheim california\",\n        \"alts\": [\"anaheim\", \"anaheim ca\", \"anaheim usa\"]\n      },\n      {\n        \"keyword\": \"austin texas\",\n        \"alts\": [\"austin\", \"austin tx\", \"austin usa\"]\n      },\n      {\n        \"keyword\": \"auckland new zealand\",\n        \"alts\": [\"auckland\", \"auckland nz\"]\n      },\n      {\n        \"keyword\": \"asheville north carolina\",\n        \"alts\": [\"asheville\", \"asheville nc\", \"asheville usa\"]\n      },\n      {\n        \"keyword\": \"ashgabat turkmenistan\",\n        \"alts\": [\"ashgabat\", \"ashgabad turkmenistan\"]\n      },\n      {\n        \"keyword\": \"athens greece\",\n        \"alts\": [\"athens\"]\n      },\n      {\n        \"keyword\": \"athens georgia\",\n        \"alts\": [\"athens\", \"athens ga\", \"athens usa\"]\n      },\n      {\n        \"keyword\": \"atlanta georgia\",\n        \"alts\": [\"atlanta\", \"atlanta ga\", \"atlanta usa\"]\n      },\n      {\n        \"keyword\": \"antwerp belgium\",\n        \"alts\": [\"antwerp\"]\n      },\n      {\n        \"keyword\": \"adelaide australia\",\n        \"alts\": [\"adelaide\"]\n      },\n      {\n        \"keyword\": \"astana kazakhstan\",\n        \"alts\": [\"astana\"]\n      },\n      {\n        \"keyword\": \"asuncion paraguay\",\n        \"alts\": [\"asuncion\"]\n      },\n      {\n        \"keyword\": \"algiers algeria\",\n        \"alts\": [\"algiers\"]\n      },\n      {\n        \"keyword\": \"acapulco mexico\",\n        \"alts\": [\"acapulco\"]\n      },\n      {\n        \"keyword\": \"ankara turkey\",\n        \"alts\": [\"ankara\"]\n      },\n      {\n        \"keyword\": \"baghdad iraq\",\n        \"alts\": [\"baghdad\"]\n      },\n      {\n        \"keyword\": \"bangkok thailand\",\n        \"alts\": [\"bangkok\"]\n      },\n      {\n        \"keyword\": \"beijing china\",\n        \"alts\": [\"beijing\", \"peking\"]\n      },\n      {\n        \"keyword\": \"berlin germany\",\n        \"alts\": [\"berlin\"]\n      },\n      {\n        \"keyword\": \"boston massachusetts\",\n        \"alts\": [\"boston\", \"boston ma\", \"boston usa\"]\n      },\n      {\n        \"keyword\": \"buenos aires argentina\",\n        \"alts\": [\"buenos aires\"]\n      },\n      {\n        \"keyword\": \"bursa turkey\",\n        \"alts\": [\"bursa\"]\n      },\n      {\n        \"keyword\": \"bucharest romania\",\n        \"alts\": [\"bucharest\"]\n      },\n      {\n        \"keyword\": \"baltimore maryland\",\n        \"alts\": [\"baltimore\", \"baltimore md\", \"baltimore usa\"]\n      },\n      {\n        \"keyword\": \"beirut lebanon\",\n        \"alts\": [\"beirut\"]\n      },\n      {\n        \"keyword\": \"belfast northern ireland\",\n        \"alts\": [\"belfast\", \"belfast uk\", \"belfast united kingdom\"]\n      },\n      {\n        \"keyword\": \"bratislava slovakia\",\n        \"alts\": [\"bratislava\"]\n      },\n      {\n        \"keyword\": \"belgrade serbia\",\n        \"alts\": [\"belgrade\"]\n      },\n      {\n        \"keyword\": \"budapest hungary\",\n        \"alts\": [\"budapest\"]\n      },\n      {\n        \"keyword\": \"baku azerbaijan\",\n        \"alts\": [\"baku\"]\n      },\n      {\n        \"keyword\": \"bordeaux france\",\n        \"alts\": [\"bordeaux\"]\n      },\n      {\n        \"keyword\": \"busan south korea\",\n        \"alts\": [\"busan\"]\n      },\n      {\n        \"keyword\": \"brussels belgium\",\n        \"alts\": [\"brussels\"]\n      },\n      {\n        \"keyword\": \"bangalore india\",\n        \"alts\": [\"bangalore\"]\n      },\n      {\n        \"keyword\": \"calgary canada\",\n        \"alts\": [\"calgary\"]\n      },\n      {\n        \"keyword\": \"chicago illinois\",\n        \"alts\": [\"chicago\", \"chi\"]\n      },\n      {\n        \"keyword\": \"copenhagen denmark\",\n        \"alts\": [\"copenhagen\"]\n      },\n      {\n        \"keyword\": \"columbus ohio\",\n        \"alts\": [\"columbus\"]\n      },\n      {\n        \"keyword\": \"cologne germany\",\n        \"alts\": [\"cologne\"]\n      },\n      {\n        \"keyword\": \"cairo egypt\",\n        \"alts\": [\"cairo\"]\n      },\n      {\n        \"keyword\": \"cape town south africa\",\n        \"alts\": [\"cape town\", \"cape town sa\"]\n      },\n      {\n        \"keyword\": \"caracas venezuela\",\n        \"alts\": [\"caracas\"]\n      },\n      {\n        \"keyword\": \"cleveland ohio\",\n        \"alts\": [\"cleveland\"]\n      },\n      {\n        \"keyword\": \"cork ireland\",\n        \"alts\": [\"cork\"]\n      },\n      {\n        \"keyword\": \"christchurch new zealand\",\n        \"alts\": [\"christchurch\", \"christchurch nz\"]\n      },\n      {\n        \"keyword\": \"casablanca morocco\",\n        \"alts\": [\"casablanca\"]\n      },\n      {\n        \"keyword\": \"chengdu china\",\n        \"alts\": [\"chengdu\"]\n      },\n      {\n        \"keyword\": \"cannes france\",\n        \"alts\": [\"cannes\"]\n      },\n      {\n        \"keyword\": \"canberra australia\",\n        \"alts\": [\"canberra\"]\n      },\n      {\n        \"keyword\": \"dallas texas\",\n        \"alts\": [\"dallas\", \"dallas tx\"]\n      },\n      {\n        \"keyword\": \"dubai united arab emirates\",\n        \"alts\": [\"dubai\", \"dubai uae\"]\n      },\n      {\n        \"keyword\": \"dhaka bangladesh\",\n        \"alts\": [\"dhaka\"]\n      },\n      {\n        \"keyword\": \"dakar senegal\",\n        \"alts\": [\"dakar\"]\n      },\n      {\n        \"keyword\": \"delhi india\",\n        \"alts\": [\"delhi\"]\n      },\n      {\n        \"keyword\": \"durban south africa\",\n        \"alts\": [\"durban\"]\n      },\n      {\n        \"keyword\": \"dublin ireland\",\n        \"alts\": [\"dublin\"]\n      },\n      {\n        \"keyword\": \"dalian china\",\n        \"alts\": [\"dalian\"]\n      },\n      {\n        \"keyword\": \"doha qatar\",\n        \"alts\": [\"doha\"]\n      },\n      {\n        \"keyword\": \"denver colorado\",\n        \"alts\": [\"denver\", \"denver co\", \"denver usa\"]\n      },\n      {\n        \"keyword\": \"dusseldorf germany\",\n        \"alts\": [\"dusseldorf\"]\n      },\n      {\n        \"keyword\": \"davao city philippines\",\n        \"alts\": [\"davao city\"]\n      },\n      {\n        \"keyword\": \"darwin australia\",\n        \"alts\": [\"darwin\"]\n      },\n      {\n        \"keyword\": \"dunfermline scotland\",\n        \"alts\": [\"dunfermline\"]\n      },\n      {\n        \"keyword\": \"daegu south korea\",\n        \"alts\": [\"daegu\"]\n      },\n      {\n        \"keyword\": \"damascus syria\",\n        \"alts\": [\"damascus\"]\n      },\n      {\n        \"keyword\": \"dar es salaam tanzania\",\n        \"alts\": [\"dar es salaam\"]\n      },\n      {\n        \"keyword\": \"edinburgh scotland\",\n        \"alts\": [\"edinburgh\"]\n      },\n      {\n        \"keyword\": \"edmonton canada\",\n        \"alts\": [\"edmonton\"]\n      },\n      {\n        \"keyword\": \"essen germany\",\n        \"alts\": [\"essen\"]\n      },\n      {\n        \"keyword\": \"evora portugal\",\n        \"alts\": [\"evora\"]\n      },\n      {\n        \"keyword\": \"ensenada mexico\",\n        \"alts\": [\"ensenada\"]\n      },\n      {\n        \"keyword\": \"el paso texas\",\n        \"alts\": [\"el paso\"]\n      },\n      {\n        \"keyword\": \"enugu nigeria\",\n        \"alts\": [\"enugu\"]\n      },\n      {\n        \"keyword\": \"enschede netherlands\",\n        \"alts\": [\"enschede\"]\n      },\n      {\n        \"keyword\": \"eureka california\",\n        \"alts\": [\"eureka\"]\n      },\n      {\n        \"keyword\": \"erie pennsylvania\",\n        \"alts\": [\"erie\", \"erie pa\", \"erie usa\"]\n      },\n      {\n        \"keyword\": \"eilat israel\",\n        \"alts\": [\"eilat\"]\n      },\n      {\n        \"keyword\": \"essentuki russia\",\n        \"alts\": [\"essentuki\"]\n      },\n      {\n        \"keyword\": \"esbjerg denmark\",\n        \"alts\": [\"esbjerg\"]\n      },\n      {\n        \"keyword\": \"fez morocco\",\n        \"alts\": [\"fez\"]\n      },\n      {\n        \"keyword\": \"florence italy\",\n        \"alts\": [\"florence\"]\n      },\n      {\n        \"keyword\": \"frankfurt germany\",\n        \"alts\": [\"frankfurt\"]\n      },\n      {\n        \"keyword\": \"fort worth texas\",\n        \"alts\": [\"fort worth\", \"forth worth tx\", \"fort worth usa\"]\n      },\n      {\n        \"keyword\": \"fukuoka japan\",\n        \"alts\": [\"fukuoka\"]\n      },\n      {\n        \"keyword\": \"faisalabad pakistan\",\n        \"alts\": [\"faisalabad\"]\n      },\n      {\n        \"keyword\": \"fujairah united arab emirates\",\n        \"alts\": [\"fujairah\", \"fujairah uae\"]\n      },\n      {\n        \"keyword\": \"funafuti tuvalu\",\n        \"alts\": [\"funafuti\"]\n      },\n      {\n        \"keyword\": \"florianopolis brazil\",\n        \"alts\": [\"florianopolis\"]\n      },\n      {\n        \"keyword\": \"flinders australia\",\n        \"alts\": [\"flinders\"]\n      },\n      {\n        \"keyword\": \"faro portugal\",\n        \"alts\": [\"faro\"]\n      },\n      {\n        \"keyword\": \"fujairah united arab emirates\",\n        \"alts\": [\"fujairah\", \"fujairah uae\"]\n      },\n      {\n        \"keyword\": \"fort mcmurray canada\",\n        \"alts\": [\"fort mcmurray\"]\n      },\n      {\n        \"keyword\": \"fortaleza brazil\",\n        \"alts\": [\"fortaleza\"]\n      },\n      {\n        \"keyword\": \"friesland netherlands\",\n        \"alts\": [\"friesland\"]\n      },\n      {\n        \"keyword\": \"funchal portugal\",\n        \"alts\": [\"funchal\"]\n      },\n      {\n        \"keyword\": \"fuzhou china\",\n        \"alts\": [\"fuzhou\"]\n      },\n      {\n        \"keyword\": \"fresno california\",\n        \"alts\": [\"fresno\", \"fresno ca\", \"fresno usa\"]\n      },\n      {\n        \"keyword\": \"fermoy ireland\",\n        \"alts\": [\"fermoy\"]\n      },\n      {\n        \"keyword\": \"fukushima japan\",\n        \"alts\": [\"fukushima\"]\n      },\n      {\n        \"keyword\": \"glasgow scotland\",\n        \"alts\": [\"glasgow\"]\n      },\n      {\n        \"keyword\": \"guangzhou china\",\n        \"alts\": [\"guangzhou\"]\n      },\n      {\n        \"keyword\": \"gdansk poland\",\n        \"alts\": [\"gdansk\"]\n      },\n      {\n        \"keyword\": \"guatemala city guatemala\",\n        \"alts\": [\"guatemala city\"]\n      },\n      {\n        \"keyword\": \"guwahati india\",\n        \"alts\": [\"guwahati\"]\n      },\n      {\n        \"keyword\": \"gyeongju south korea\",\n        \"alts\": [\"gyeongju\"]\n      },\n      {\n        \"keyword\": \"genoa italy\",\n        \"alts\": [\"genoa\"]\n      },\n      {\n        \"keyword\": \"grahamstown south africa\",\n        \"alts\": [\"grahamstown\"]\n      },\n      {\n        \"keyword\": \"guadalajara mexico\",\n        \"alts\": [\"guadalajara\"]\n      },\n      {\n        \"keyword\": \"geneva switzerland\",\n        \"alts\": [\"geneva\"]\n      },\n      {\n        \"keyword\": \"graz austria\",\n        \"alts\": [\"graz\"]\n      },\n      {\n        \"keyword\": \"gwangju south korea\",\n        \"alts\": [\"gwangju\"]\n      },\n      {\n        \"keyword\": \"houston texas\",\n        \"alts\": [\"houston\", \"houston tx\", \"houston usa\"]\n      },\n      {\n        \"keyword\": \"hamburg germany\",\n        \"alts\": [\"hamburg\"]\n      },\n      {\n        \"keyword\": \"hanoi vietnam\",\n        \"alts\": [\"hanoi\"]\n      },\n      {\n        \"keyword\": \"helsinki finland\",\n        \"alts\": [\"helsinki\"]\n      },\n      {\n        \"keyword\": \"ho chi minh city vietnam\",\n        \"alts\": [\"ho chi minh city\", \"ho chi minh\", \"saigon\"]\n      },\n      {\n        \"keyword\": \"haifa israel\",\n        \"alts\": [\"haifa\"]\n      },\n      {\n        \"keyword\": \"havana cuba\",\n        \"alts\": [\"havana\"]\n      },\n      {\n        \"keyword\": \"hong kong china\",\n        \"alts\": [\"hong kong\"]\n      },\n      {\n        \"keyword\": \"hobart australia\",\n        \"alts\": [\"hobart\"]\n      },\n      {\n        \"keyword\": \"hangzhou china\",\n        \"alts\": [\"hangzhou\"]\n      },\n      {\n        \"keyword\": \"hilo hawaii\",\n        \"alts\": [\"hilo\"]\n      },\n      {\n        \"keyword\": \"hermosillo mexico\",\n        \"alts\": [\"hermosillo\"]\n      },\n      {\n        \"keyword\": \"honolulu hawaii\",\n        \"alts\": [\"honolulu\", \"honolulu hi\", \"honolulu usa\"]\n      },\n      {\n        \"keyword\": \"helsingborg sweden\",\n        \"alts\": [\"helsingborg\"]\n      },\n      {\n        \"keyword\": \"hiroshima japan\",\n        \"alts\": [\"hiroshima\"]\n      },\n      {\n        \"keyword\": \"harare zimbabwe\",\n        \"alts\": [\"harare\"]\n      },\n      {\n        \"keyword\": \"istanbul turkey\",\n        \"alts\": [\"istanbul\"]\n      },\n      {\n        \"keyword\": \"indianapolis indiana\",\n        \"alts\": [\"indianapolis\", \"indianapolis in\", \"indianapolis usa\"]\n      },\n      {\n        \"keyword\": \"ibadan nigeria\",\n        \"alts\": [\"ibadan\"]\n      },\n      {\n        \"keyword\": \"istanbul turkey\",\n        \"alts\": [\"istanbul\"]\n      },\n      {\n        \"keyword\": \"indore india\",\n        \"alts\": [\"indore\"]\n      },\n      {\n        \"keyword\": \"izmir turkey\",\n        \"alts\": [\"izmir\"]\n      },\n      {\n        \"keyword\": \"isafahan iran\",\n        \"alts\": [\"isafahan\"]\n      },\n      {\n        \"keyword\": \"incheon south korea\",\n        \"alts\": [\"incheon\"]\n      },\n      {\n        \"keyword\": \"innsbruck austria\",\n        \"alts\": [\"innsbruck\"]\n      },\n      {\n        \"keyword\": \"islamabad pakistan\",\n        \"alts\": [\"islamabad\"]\n      },\n      {\n        \"keyword\": \"ingolstadt germany\",\n        \"alts\": [\"ingolstadt\"]\n      },\n      {\n        \"keyword\": \"irvine california\",\n        \"alts\": [\"irvine\", \"irvine ca\", \"irvine usa\"]\n      },\n      {\n        \"keyword\": \"irkutsk russia\",\n        \"alts\": [\"irkutsk\"]\n      },\n      {\n        \"keyword\": \"jakarta indonesia\",\n        \"alts\": [\"jakarta\"]\n      },\n      {\n        \"keyword\": \"jerusalem israel\",\n        \"alts\": [\"jerusalem\"]\n      },\n      {\n        \"keyword\": \"jacksonville florida\",\n        \"alts\": [\"jacksonville\"]\n      },\n      {\n        \"keyword\": \"johannesburg south africa\",\n        \"alts\": [\"johannesburg\"]\n      },\n      {\n        \"keyword\": \"jabalpur india\",\n        \"alts\": [\"jabalpur\"]\n      },\n      {\n        \"keyword\": \"jinan china\",\n        \"alts\": [\"jinan\"]\n      },\n      {\n        \"keyword\": \"jeddah saudi arabia\",\n        \"alts\": [\"jeddah\"]\n      },\n      {\n        \"keyword\": \"jalapa guatemala\",\n        \"alts\": [\"jalapa\"]\n      },\n      {\n        \"keyword\": \"jackson mississippi\",\n        \"alts\": [\"jackson\"]\n      },\n      {\n        \"keyword\": \"juarez mexico\",\n        \"alts\": [\"juarez\"]\n      },\n      {\n        \"keyword\": \"jabalpur india\",\n        \"alts\": [\"jabalpur\"]\n      },\n      {\n        \"keyword\": \"jining china\",\n        \"alts\": [\"jining\"]\n      },\n      {\n        \"keyword\": \"kampala uganda\",\n        \"alts\": [\"kampala\"]\n      },\n      {\n        \"keyword\": \"kathmandu nepal\",\n        \"alts\": [\"kathmandu\"]\n      },\n      {\n        \"keyword\": \"kaunas lithuania\",\n        \"alts\": [\"kaunas\"]\n      },\n      {\n        \"keyword\": \"kuala lumpur malaysia\",\n        \"alts\": [\"kuala lumpur\"]\n      },\n      {\n        \"keyword\": \"kyoto japan\",\n        \"alts\": [\"kyoto\"]\n      },\n      {\n        \"keyword\": \"kagoshima japan\",\n        \"alts\": [\"kagoshima\"]\n      },\n      {\n        \"keyword\": \"karachi pakistan\",\n        \"alts\": [\"karachi\"]\n      },\n      {\n        \"keyword\": \"kiev ukraine\",\n        \"alts\": [\"kiev\", \"kyiv\", \"kyiv ukraine\"]\n      },\n      {\n        \"keyword\": \"kingston jamaica\",\n        \"alts\": [\"kingston\"]\n      },\n      {\n        \"keyword\": \"kolkata india\",\n        \"alts\": [\"kolkata\", \"calcutta\"]\n      },\n      {\n        \"keyword\": \"kunming china\",\n        \"alts\": [\"kunming\"]\n      },\n      {\n        \"keyword\": \"kabul afghanistan\",\n        \"alts\": [\"kabul\"]\n      },\n      {\n        \"keyword\": \"kyiv ukraine\",\n        \"alts\": [\"kyiv\"]\n      },\n      {\n        \"keyword\": \"kawasaki japan\",\n        \"alts\": [\"kawasaki\"]\n      },\n    \n      {\n        \"keyword\": \"london england\",\n        \"alts\": [\"london\"]\n      },\n      {\n        \"keyword\": \"la paz bolivia\",\n        \"alts\": [\"la paz\"]\n      },\n      {\n        \"keyword\": \"los angeles california\",\n        \"alts\": [\"los angeles\", \"los angeles ca\", \"los angeles usa\",  \"la\" , \"la ca\", \"la california\", \"la usa\"]\n      },\n      {\n        \"keyword\": \"lima peru\",\n        \"alts\": [\"lima\"]\n      },\n      {\n        \"keyword\": \"lyon france\",\n        \"alts\": [\"lyon\"]\n      },\n      {\n        \"keyword\": \"lisbon portugal\",\n        \"alts\": [\"lisbon\"]\n      },\n      {\n        \"keyword\": \"luanda angola\",\n        \"alts\": [\"luanda\"]\n      },\n      {\n        \"keyword\": \"liverpool england\",\n        \"alts\": [\"liverpool\", \"liverpool uk\"]\n      },\n      {\n        \"keyword\": \"lagos nigeria\",\n        \"alts\": [\"lagos\"]\n      },\n      {\n        \"keyword\": \"leeds england\",\n        \"alts\": [\"leeds\", \"leeds uk\"]\n      },\n      {\n        \"keyword\": \"ljubljana slovenia\",\n        \"alts\": [\"ljubljana\"]\n      },\n      {\n        \"keyword\": \"lyon france\",\n        \"alts\": [\"lyon\"]\n      },\n      {\n        \"keyword\": \"lima peru\",\n        \"alts\": [\"lima\"]\n      },\n      {\n        \"keyword\": \"lviv ukraine\",\n        \"alts\": [\"lviv\"]\n      },\n      {\n        \"keyword\": \"leipzig germany\",\n        \"alts\": [\"leipzig\"]\n      },\n      {\n        \"keyword\": \"lusaka zambia\",\n        \"alts\": [\"lusaka\"]\n      },\n      {\n        \"keyword\": \"lausanne switzerland\",\n        \"alts\": [\"lausanne\"]\n      },\n      {\n        \"keyword\": \"madrid spain\",\n        \"alts\": [\"madrid\"]\n      },\n      {\n        \"keyword\": \"manchester england\",\n        \"alts\": [\"manchester\"]\n      },\n      {\n        \"keyword\": \"mexico city mexico\",\n        \"alts\": [\"mexico city\"]\n      },\n      {\n        \"keyword\": \"manila philippines\",\n        \"alts\": [\"manila\"]\n      },\n      {\n        \"keyword\": \"montreal canada\",\n        \"alts\": [\"montreal\"]\n      },\n      {\n        \"keyword\": \"milan italy\",\n        \"alts\": [\"milan\"]\n      },\n      {\n        \"keyword\": \"moscow russia\",\n        \"alts\": [\"moscow\"]\n      },\n      {\n        \"keyword\": \"madrid spain\",\n        \"alts\": [\"madrid\"]\n      },\n      {\n        \"keyword\": \"mumbai india\",\n        \"alts\": [\"mumbai\"]\n      },\n      {\n        \"keyword\": \"managua nicaragua\",\n        \"alts\": [\"managua\"]\n      },\n      {\n        \"keyword\": \"melbourne australia\",\n        \"alts\": [\"melbourne\"]\n      },\n      {\n        \"keyword\": \"marrakech morocco\",\n        \"alts\": [\"marrakech\"]\n      },\n      {\n        \"keyword\": \"miami florida\",\n        \"alts\": [\"miami\", \"miami fl\", \"miami usa\"]\n      },\n      {\n        \"keyword\": \"minneapolis minnesota\",\n        \"alts\": [\"minneapolis\"]\n      },\n      {\n        \"keyword\": \"mecca saudi arabia\",\n        \"alts\": [\"mecca\"]\n      },\n      {\n        \"keyword\": \"melbourne australia\",\n        \"alts\": [\"melbourne\"]\n      },\n      {\n        \"keyword\": \"makati philippines\",\n        \"alts\": [\"makati\"]\n      },\n      {\n        \"keyword\": \"monterrey mexico\",\n        \"alts\": [\"monterrey\"]\n      },\n      {\n        \"keyword\": \"nagoya japan\",\n        \"alts\": [\"nagoya\"]\n      },\n      {\n        \"keyword\": \"new york city\",\n        \"alts\": [\"new york city\", \"nyc\", \"new york\"]\n      },\n      {\n        \"keyword\": \"nanjing china\",\n        \"alts\": [\"nanjing\"]\n      },\n      {\n        \"keyword\": \"new delhi india\",\n        \"alts\": [\"new delhi\"]\n      },\n      {\n        \"keyword\": \"nantes france\",\n        \"alts\": [\"nantes\"]\n      },\n      {\n        \"keyword\": \"noida india\",\n        \"alts\": [\"noida\"]\n      },\n      {\n        \"keyword\": \"newcastle upon tyne england\",\n        \"alts\": [\"newcastle\", \"newcastle upon tyne\"]\n      },\n      {\n        \"keyword\": \"nice france\",\n        \"alts\": [\"nice\"]\n      },\n      {\n        \"keyword\": \"nurumberg germany\",\n        \"alts\": [\"nurumberg\"]\n      },\n      {\n        \"keyword\": \"new orleans louisiana\",\n        \"alts\": [\"new orleans\"]\n      },\n      {\n        \"keyword\": \"nairobi kenya\",\n        \"alts\": [\"nairobi\"]\n      },\n      {\n        \"keyword\": \"naples italy\",\n        \"alts\": [\"naples\"]\n      },\n      {\n        \"keyword\": \"noosa australia\",\n        \"alts\": [\"noosa\"]\n      },\n      {\n        \"keyword\": \"osaka japan\",\n        \"alts\": [\"osaka\"]\n      },\n      {\n        \"keyword\": \"oklahoma city oklahoma\",\n        \"alts\": [\"oklahoma city\"]\n      },\n      {\n        \"keyword\": \"oslo norway\",\n        \"alts\": [\"oslo\"]\n      },\n      {\n        \"keyword\": \"oxford england\",\n        \"alts\": [\"oxford\"]\n      },\n      {\n        \"keyword\": \"ottawa canada\",\n        \"alts\": [\"ottawa\"]\n      },\n      {\n        \"keyword\": \"orsay france\",\n        \"alts\": [\"orsay\"]\n      },\n      {\n        \"keyword\": \"odessa ukraine\",\n        \"alts\": [\"odessa\"]\n      },\n      {\n        \"keyword\": \"oranjestad aruba\",\n        \"alts\": [\"oranjestad\"]\n      },\n      {\n        \"keyword\": \"orlando florida\",\n        \"alts\": [\"orlando\", \"orlando fl\", \"orlando usa\"]\n      },\n      {\n        \"keyword\": \"ostrava czech republic\",\n        \"alts\": [\"ostrava\"]\n      },\n      {\n        \"keyword\": \"oaxaca mexico\",\n        \"alts\": [\"oaxaca\"]\n      },\n      {\n        \"keyword\": \"otago new zealand\",\n        \"alts\": [\"otago\"]\n      },\n      {\n        \"keyword\": \"ouagadougou burkina faso\",\n        \"alts\": [\"ouagadougou\"]\n      },\n      {\n        \"keyword\": \"odense denmark\",\n        \"alts\": [\"odense\"]\n      },\n      {\n        \"keyword\": \"oulu finland\",\n        \"alts\": [\"oulu\"]\n      },\n      {\n        \"keyword\": \"paris france\",\n        \"alts\": [\"paris\"]\n      },\n      {\n        \"keyword\": \"prague czech republic\",\n        \"alts\": [\"prague\"]\n      },\n      {\n        \"keyword\": \"porto portugal\",\n        \"alts\": [\"porto\"]\n      },\n      {\n        \"keyword\": \"philadelphia pennsylvania\",\n        \"alts\": [\"philadelphia\"]\n      },\n      {\n        \"keyword\": \"pyeongyang north korea\",\n        \"alts\": [\"pyeongyang\"]\n      },\n      {\n        \"keyword\": \"perth australia\",\n        \"alts\": [\"perth\"]\n      },\n      {\n        \"keyword\": \"plovdiv bulgaria\",\n        \"alts\": [\"plovdiv\"]\n      },\n      {\n        \"keyword\": \"pattaya thailand\",\n        \"alts\": [\"pattaya\"]\n      },\n      {\n        \"keyword\": \"portland oregon\",\n        \"alts\": [\"portland\"]\n      },\n      {\n        \"keyword\": \"phoenix arizona\",\n        \"alts\": [\"phoenix\"]\n      },\n      {\n        \"keyword\": \"porto alegre brazil\",\n        \"alts\": [\"porto alegre\"]\n      },\n      {\n        \"keyword\": \"peshawar pakistan\",\n        \"alts\": [\"peshawar\"]\n      },\n      {\n        \"keyword\": \"panama city panama\",\n        \"alts\": [\"panama city\"]\n      },\n      {\n        \"keyword\": \"rome italy\",\n        \"alts\": [\"rome\"]\n      },\n      {\n        \"keyword\": \"rio de janeiro brazil\",\n        \"alts\": [\"rio de janeiro\"]\n      },\n      {\n        \"keyword\": \"riyadh saudi arabia\",\n        \"alts\": [\"riyadh\"]\n      },\n      {\n        \"keyword\": \"reykjavik iceland\",\n        \"alts\": [\"reykjavik\"]\n      },\n      {\n        \"keyword\": \"rotterdam netherlands\",\n        \"alts\": [\"rotterdam\"]\n      },\n      {\n        \"keyword\": \"ras al khaimah united arab emirates\",\n        \"alts\": [\"ras al khaimah\"]\n      },\n      {\n        \"keyword\": \"raleigh north carolina\",\n        \"alts\": [\"raleigh\"]\n      },\n      {\n        \"keyword\": \"riga latvia\",\n        \"alts\": [\"riga\"]\n      },\n      {\n        \"keyword\": \"rochester new york\",\n        \"alts\": [\"rochester\"]\n      },\n      {\n        \"keyword\": \"recife brazil\",\n        \"alts\": [\"recife\"]\n      },\n      {\n        \"keyword\": \"san francisco california\",\n        \"alts\": [\"san francisco\"]\n      },\n      {\n        \"keyword\": \"sydney australia\",\n        \"alts\": [\"sydney\"]\n      },\n      {\n        \"keyword\": \"singapore\",\n        \"alts\": [\"singapore\"]\n      },\n      {\n        \"keyword\": \"seoul south korea\",\n        \"alts\": [\"seoul\"]\n      },\n      {\n        \"keyword\": \"stockholm sweden\",\n        \"alts\": [\"stockholm\"]\n      },\n      {\n        \"keyword\": \"santiago chile\",\n        \"alts\": [\"santiago\"]\n      },\n      {\n        \"keyword\": \"san diego california\",\n        \"alts\": [\"san diego\"]\n      },\n      {\n        \"keyword\": \"shanghai china\",\n        \"alts\": [\"shanghai\"]\n      },\n      {\n        \"keyword\": \"sao paulo brazil\",\n        \"alts\": [\"sao paulo\"]\n      },\n      {\n        \"keyword\": \"stuttgart germany\",\n        \"alts\": [\"stuttgart\"]\n      },\n      {\n        \"keyword\": \"sevilla spain\",\n        \"alts\": [\"sevilla\"]\n      },\n      {\n        \"keyword\": \"saskatoon canada\",\n        \"alts\": [\"saskatoon\"]\n      },\n      {\n        \"keyword\": \"san salvador el salvador\",\n        \"alts\": [\"san salvador\"]\n      },\n      {\n        \"keyword\": \"sofia bulgaria\",\n        \"alts\": [\"sofia\"]\n      },\n      {\n        \"keyword\": \"seattle washington\",\n        \"alts\": [\"seattle\"]\n      },\n      {\n        \"keyword\": \"tokyo japan\",\n        \"alts\": [\"tokyo\"]\n      },\n      {\n        \"keyword\": \"torino italy\",\n        \"alts\": [\"torino\"]\n      },\n      {\n        \"keyword\": \"tunis tunisia\",\n        \"alts\": [\"tunis\"]\n      },\n      {\n        \"keyword\": \"tashkent uzbekistan\",\n        \"alts\": [\"tashkent\"]\n      },\n      {\n        \"keyword\": \"toronto canada\",\n        \"alts\": [\"toronto\"]\n      },\n      {\n        \"keyword\": \"tirana albania\",\n        \"alts\": [\"tirana\"]\n      },\n      {\n        \"keyword\": \"tijuana mexico\",\n        \"alts\": [\"tijuana\"]\n      },\n      {\n        \"keyword\": \"turin italy\",\n        \"alts\": [\"turin\"]\n      },\n      {\n        \"keyword\": \"tokyo japan\",\n        \"alts\": [\"tokyo\"]\n      },\n      {\n        \"keyword\": \"thessaloniki greece\",\n        \"alts\": [\"thessaloniki\"]\n      },\n      {\n        \"keyword\": \"taegu south korea\",\n        \"alts\": [\"taegu\"]\n      },\n      {\n        \"keyword\": \"taksim turkey\",\n        \"alts\": [\"taksim\"]\n      },\n      {\n        \"keyword\": \"taipei taiwan\",\n        \"alts\": [\"taipei\"]\n      },\n      {\n        \"keyword\": \"tripoli libya\",\n        \"alts\": [\"tripoli\"]\n      },\n      {\n        \"keyword\": \"tokyo japan\",\n        \"alts\": [\"tokyo\"]\n      },\n      {\n        \"keyword\": \"ulaanbaatar mongolia\",\n        \"alts\": [\"ulaanbaatar\"]\n      },\n      {\n        \"keyword\": \"ubud indonesia\",\n        \"alts\": [\"ubud\"]\n      },\n      {\n        \"keyword\": \"uppsala sweden\",\n        \"alts\": [\"uppsala\"]\n      },\n      {\n        \"keyword\": \"urumqi china\",\n        \"alts\": [\"urumqi\"]\n      },\n      {\n        \"keyword\": \"vaduz liechtenstein\",\n        \"alts\": [\"vaduz\"]\n      },\n      {\n        \"keyword\": \"vancouver canada\",\n        \"alts\": [\"vancouver\"]\n      },\n      {\n        \"keyword\": \"valencia spain\",\n        \"alts\": [\"valencia\"]\n      },\n      {\n        \"keyword\": \"vigo spain\",\n        \"alts\": [\"vigo\"]\n      },\n      {\n        \"keyword\": \"valparaiso chile\",\n        \"alts\": [\"valparaiso\"]\n      },\n      {\n        \"keyword\": \"vladivostok russia\",\n        \"alts\": [\"vladivostok\"]\n      },\n      {\n        \"keyword\": \"vienna austria\",\n        \"alts\": [\"vienna\"]\n      },\n      {\n        \"keyword\": \"vilnius lithuania\",\n        \"alts\": [\"vilnius\"]\n      },\n      {\n        \"keyword\": \"villarreal spain\",\n        \"alts\": [\"villarreal\"]\n      },\n      {\n        \"keyword\": \"washington dc\",\n        \"alts\": [\"washington dc\"]\n      },\n      {\n        \"keyword\": \"westminster england\",\n        \"alts\": [\"westminster\"]\n      },\n      {\n        \"keyword\": \"wilmington delaware\",\n        \"alts\": [\"wilmington\"]\n      },\n      {\n        \"keyword\": \"wroclaw poland\",\n        \"alts\": [\"wroclaw\"]\n      },\n      {\n        \"keyword\": \"warsaw poland\",\n        \"alts\": [\"warsaw\"]\n      },\n      {\n        \"keyword\": \"wellington new zealand\",\n        \"alts\": [\"wellington\"]\n      },\n      {\n        \"keyword\": \"winnipeg manitoba\",\n        \"alts\": [\"winnipeg\"]\n      },\n      {\n        \"keyword\": \"warsaw poland\",\n        \"alts\": [\"warsaw\"]\n      },\n      {\n        \"keyword\": \"wuhan china\",\n        \"alts\": [\"wuhan\"]\n      },\n      {\n        \"keyword\": \"yokohama japan\",\n        \"alts\": [\"yokohama\"]\n      },\n      {\n        \"keyword\": \"york england\",\n        \"alts\": [\"york\"]\n      },\n      {\n        \"keyword\": \"yaounde cameroon\",\n        \"alts\": [\"yaounde\"]\n      },\n      {\n        \"keyword\": \"yuma arizona\",\n        \"alts\": [\"yuma\"]\n      },\n      {\n        \"keyword\": \"ypres belgium\",\n        \"alts\": [\"ypres\"]\n      },\n      {\n        \"keyword\": \"yakutsk russia\",\n        \"alts\": [\"yakutsk\"]\n      },\n      {\n        \"keyword\": \"yerevan armenia\",\n        \"alts\": [\"yerevan\"]\n      },\n      {\n        \"keyword\": \"yanbu saudi arabia\",\n        \"alts\": [\"yanbu\"]\n      },\n      {\n        \"keyword\": \"yogyakarta indonesia\",\n        \"alts\": [\"yogyakarta\"]\n      },\n      {\n        \"keyword\": \"yekaterinburg russia\",\n        \"alts\": [\"yekaterinburg\"]\n      },\n      {\n        \"keyword\": \"zacatecas mexico\",\n        \"alts\": [\"zacatecas\"]\n      },\n      {\n        \"keyword\": \"zunyi china\",\n        \"alts\": [\"zunyi\"]\n      },\n      {\n        \"keyword\": \"zincantan mexico\",\n        \"alts\": [\"zincantan\"]\n      },\n      {\n        \"keyword\": \"zagreb croatia\",\n        \"alts\": [\"zagreb\"]\n      },\n      {\n        \"keyword\": \"zeeland netherlands\",\n        \"alts\": [\"zeeland\"]\n      },\n      {\n        \"keyword\": \"zhongshan china\",\n        \"alts\": [\"zhongshan\"]\n      },\n      {\n        \"keyword\": \"zanzibar tanzania\",\n        \"alts\": [\"zanzibar\"]\n      },\n      {\n        \"keyword\": \"zurich switzerland\",\n        \"alts\": [\"zurich\"]\n      },\n      {\n        \"keyword\": \"zaragoza spain\",\n        \"alts\": [\"zaragoza\"]\n      }\n    ]\n  },\n  {\n    \"category\": \"landmark\",\n    \"words\": [\n      {\n        \"keyword\": \"denali\",\n        \"alts\": [\"mount mckinley\", \"mt mckinley\"]\n      },\n      {\n        \"keyword\": \"mount saint lias\",\n        \"alts\": [\"mt st elias\"]\n      },\n      {\n        \"keyword\": \"mount whitney\",\n        \"alts\": [\"mt whitney\"]\n      },\n      {\n        \"keyword\": \"mount rainier\",\n        \"alts\": [\"mt rainier\"]\n      },\n      {\n        \"keyword\": \"iztaccihuatl\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"grand teton\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"gannett peak\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mount adams\",\n        \"alts\": [\"mt adams\"]\n      },\n      {\n        \"keyword\": \"mount saint helens\",\n        \"alts\": [\"mt st helens\"]\n      },\n      {\n        \"keyword\": \"mount shasta\",\n        \"alts\": [\"mt shasta\"]\n      },\n      {\n        \"keyword\": \"mount saint helens\",\n        \"alts\": [\"mt st helens\"]\n      },\n      {\n        \"keyword\": \"pikes peak\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"aconcagua\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"fitz roy\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cotopaxi\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"chimborazo\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mont blanc\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"zugspitze\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mount elbrus\",\n        \"alts\": [\"mt elbrus\"]\n      },\n      {\n        \"keyword\": \"mount etna\",\n        \"alts\": [\"mt etna\"]\n      },\n      {\n        \"keyword\": \"everest\",\n        \"alts\": [\"mt everest\", \"mount everest\"]\n      },\n      {\n        \"keyword\": \"k2\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"lhotse\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"makalu\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"cho oyu\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"manaslu\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"annapurna\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"dhaulagiri\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nanga parbat\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"kangchenjunga\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mount fuji\",\n        \"alts\": [\"fuji\", \"mt fuji\"]\n      },\n      {\n        \"keyword\": \"kilimanjaro\",\n        \"alts\": [\"mount kilimanjaro\", \"mt kilimanjaro\"]\n      },\n      {\n        \"keyword\": \"meru\",\n        \"alts\": [\"mount meru\", \"mt meru\"]\n      },\n      {\n        \"keyword\": \"aoraki\",\n        \"alts\": [\"mount cook\", \"mt cook\"]\n      },\n      {\n        \"keyword\": \"haleakala\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"puncak jaya\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"sumantri\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"amazon\",\n        \"alts\": [\"amazonas\"]\n      },\n      {\n        \"keyword\": \"colorado river\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"dnieper\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"ganges\",\n        \"alts\": [\"ganga\", \"ganges river\"]\n      },\n      {\n        \"keyword\": \"illinois river\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"mississippi river\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"nile\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"rhine\",\n        \"alts\": []\n      },\n      {\n        \"keyword\": \"yangtze river\",\n        \"alts\": [\"changjiang\", \"yangtze\"]\n      },\n      {\n        \"keyword\": \"yellow river\",\n        \"alts\": [\"huang he\"]\n      },\n      {\n        \"keyword\": \"zambezi river\",\n        \"alts\": [\"zambezi\"]\n      },\n      {\n        \"keyword\": \"yenisei river\",\n        \"alts\": [\"yenisei\"]\n      }\n    ]\n  }\n]\n\"\"\"\n\nJavaScript file content:\nasync function renderer(context) {\n    const {\n        act,\n        agents,\n        environment,\n        frame,\n        height = 800,\n        interactive,\n        isInteractive,\n        parent,\n        step,\n        update,\n        width = 1200,\n    } = context;\n\n    // Common Dimensions.\n    const maxWidth = 1200;\n    const maxHeight = 800;\n    const canvasSize = Math.min(height, width);\n    const unit = 8;\n    const offset = canvasSize > 400 ? canvasSize * 0.1 : unit / 2;\n    const cellSize = (canvasSize - offset * 2) / 3;\n\n    // Canvas Setup.\n    let canvas = parent.querySelector(\"canvas\");\n    if (!canvas) {\n        canvas = document.createElement(\"canvas\");\n        parent.appendChild(canvas);\n\n        if (interactive) {\n            canvas.addEventListener(\"click\", evt => {\n                if (!isInteractive()) return;\n                const rect = evt.target.getBoundingClientRect();\n                const x = evt.clientX - rect.left - offset;\n                const y = evt.clientY - rect.top - offset;\n                act(Math.floor(x / cellSize) + Math.floor(y / cellSize) * 3);\n            });\n        }\n    }\n\n    canvas.style.cursor = isInteractive() ? \"pointer\" : \"default\";\n\n    // Canvas setup and reset.\n    let c = canvas.getContext(\"2d\");\n    canvas.width = Math.min(maxWidth, width);\n    canvas.height = Math.min(maxHeight, height);\n    c.clearRect(0, 0, canvas.width, canvas.height);\n    // ------------------------------------------------------------------------------------//\n\n    const state = environment.steps[step]\n\n    const team1_index = state[0].observation.questions.length - 1;\n    const team2_index = state[2].observation.questions.length - 1;\n\n    let team1_question = \"\";\n    let team2_question = \"\";\n    if (team1_index >= 0) {\n        team1_question = state[0].observation.questions[team1_index];\n    }\n    if (team2_index >= 0) {\n        team2_question = state[2].observation.questions[team2_index];\n    }\n\n    let team1_answer = \"\";\n    let team2_answer = \"\";\n    if (state[0].observation.questions.length == state[0].observation.answers.length && team1_index >= 0) {\n        team1_answer = state[0].observation.answers[team1_index];\n    }\n    if (state[2].observation.questions.length == state[2].observation.answers.length && team2_index >= 0) {\n        team2_answer = state[2].observation.answers[team2_index];\n    }\n\n    let team1_guess = \"\";\n    let team2_guess = \"\";\n    if (state[0].observation.questions.length == state[0].observation.guesses.length && team1_index >= 0) {\n        team1_guess= state[0].observation.guesses[team1_index];\n    }\n    if (state[2].observation.questions.length == state[2].observation.guesses.length && team2_index >= 0) {\n        team2_guess = state[2].observation.guesses[team2_index];\n    }\n\n    let team1_reward = \"\";\n    let team2_reward = \"\";\n    if (state[0].reward != 0) {\n        team1_reward = state[0].reward.toString();\n    }\n    if (state[2].reward != 0) {\n        team2_reward = state[2].reward.toString();\n    }\n\n    const info = environment.info;\n    const team1_text = info?.TeamNames?.[0] || \"Team 1\";\n    const team2_text = info?.TeamNames?.[1] || \"Team 2\";\n\n    const ctx = canvas.getContext(\"2d\");\n    const padding = 20;\n    const row_width = (Math.min(maxWidth, width) - padding * 3 - 100) / 2;\n    const label_x = padding;\n    const team1_x = padding + 100;\n    const team2_x = padding * 2 + row_width + 100;\n    const line_height = 40;\n    const label_y = 120;\n    const question_y = 160;\n    const answer_y = 200;\n    const guess_y = 240;\n    const score_y = 280;\n\n    ctx.font = \"20px sans-serif\";\n    ctx.fillStyle = \"#FFFFFF\";\n\n    let line = 1;\n\n    // Keyword Row\n    ctx.fillText(\"Keyword: \" + state[1].observation.keyword, label_x, line_height * line);\n\n    line += 2;\n\n    // Team Row\n    ctx.fillText(team1_text, team1_x, line_height * line);\n    ctx.fillText(team2_text, team2_x, line_height *line);\n\n    line++;\n\n    // Question Row\n    ctx.fillText(\"Question:\", label_x, question_y);\n    let wrappedText1 = wrapText(ctx, team1_question, team1_x, question_y, row_width, line_height);\n    wrappedText1.forEach(function(item) {\n        ctx.fillText(item[0], item[1], item[2]); \n    })\n    let wrappedText2 = wrapText(ctx, team2_question, team2_x, question_y, row_width, line_height);\n    wrappedText2.forEach(function(item) {\n        ctx.fillText(item[0], item[1], item[2]); \n    })\n    /*ctx.fillText(team1_question, team1_x, line_height * line);\n    ctx.fillText(team2_question, team2_x, line_height * line);*/\n\n    line += Math.max(wrappedText1.length, wrappedText2.length);\n    //line++;\n\n    // Answer Row\n    ctx.fillText(\"Answer:\", label_x, line_height * line);\n    ctx.fillText(team1_answer, team1_x, line_height * line);\n    ctx.fillText(team2_answer, team2_x, line_height * line);\n\n    line++;\n\n    // Guess Row\n    ctx.fillText(\"Guess:\", label_x, line_height * line);\n    ctx.fillText(team1_guess, team1_x, line_height * line);\n    ctx.fillText(team2_guess, team2_x, line_height * line);\n\n    line++;\n\n    // Reward Row\n    ctx.fillText(\"Reward:\", label_x, line_height * line);\n    ctx.fillText(team1_reward, team1_x, line_height * line);\n    ctx.fillText(team2_reward, team2_x, line_height * line);\n}\n\nconst wrapText = function(ctx, inputText, x, y, maxWidth, lineHeight) {\n    let words = inputText.split(\" \");\n    let line = \"\";\n    let testLine = \"\";\n    let lineArray = [];\n\n    for(var n = 0; n < words.length; n++) {\n        testLine += `${words[n]} `;\n        let metrics = ctx.measureText(testLine);\n        if (metrics.width > maxWidth && n > 0) {\n            lineArray.push([line, x, y]);\n            y += lineHeight;\n            line = `${words[n]} `;\n            testLine = `${words[n]} `;\n        }\n        else {\n            line += `${words[n]} `;\n        }\n        if(n === words.length - 1) {\n            lineArray.push([line, x, y]);\n        }\n    }\n    return lineArray;\n}\n\n","output_type":"stream"}]}]}